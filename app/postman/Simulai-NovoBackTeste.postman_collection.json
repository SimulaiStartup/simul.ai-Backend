{
	"info": {
		"_postman_id": "750233af-af83-4047-b945-c30cdc5816a9",
		"name": "Simulai - Novo Back Teste",
		"description": "# üöÄ Get started here\n\nThis template guides you through CRUD operations (GET, POST, PUT, DELETE), variables, and tests.\n\n## üîñ **How to use this template**\n\n#### **Step 1: Send requests**\n\nRESTful APIs allow you to perform CRUD operations using the POST, GET, PUT, and DELETE HTTP methods.\n\nThis collection contains each of these [request](https://learning.postman.com/docs/sending-requests/requests/) types. Open each request and click \"Send\" to see what happens.\n\n#### **Step 2: View responses**\n\nObserve the response tab for status code (200 OK), response time, and size.\n\n#### **Step 3: Send new Body data**\n\nUpdate or add new data in \"Body\" in the POST request. Typically, Body data is also used in PUT request.\n\n```\n{\n    \"name\": \"Add your name in the body\"\n}\n\n ```\n\n#### **Step 4: Update the variable**\n\nVariables enable you to store and reuse values in Postman. We have created a [variable](https://learning.postman.com/docs/sending-requests/variables/) called `base_url` with the sample request [https://postman-api-learner.glitch.me](https://postman-api-learner.glitch.me). Replace it with your API endpoint to customize this collection.\n\n#### **Step 5: Add tests in the \"Tests\" tab**\n\nTests help you confirm that your API is working as expected. You can write test scripts in JavaScript and view the output in the \"Test Results\" tab.\n\n<img src=\"https://content.pstmn.io/b5f280a7-4b09-48ec-857f-0a7ed99d7ef8/U2NyZWVuc2hvdCAyMDIzLTAzLTI3IGF0IDkuNDcuMjggUE0ucG5n\">\n\n## üí™ Pro tips\n\n- Use folders to group related requests and organize the collection.\n- Add more [scripts](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/) in \"Tests\" to verify if the API works as expected and execute workflows.\n    \n\n## üí°Related templates\n\n[API testing basics](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9a37a28-055b-49cd-8c7e-97494a21eb54&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[API documentation](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9c28f47-1253-44af-a2f3-20dce4da1f18&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[Authorization methods](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=31a9a6ed-4cdf-4ced-984c-d12c9aec1c27&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23129826",
		"_collection_link": "https://universal-equinox-259185.postman.co/workspace/Organice~e528034c-aad9-4315-b4e9-8c0ca32fd1f8/collection/23129826-750233af-af83-4047-b945-c30cdc5816a9?action=share&source=collection_link&creator=23129826"
	},
	"item": [
		{
			"name": "post roteiro Copy",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"context\":\"estamos apresentando a plataforma a um cliete\",\n  \"chat\":\"Membro do grupo\",\n  \"user\":\"Professores e alunos\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8000/roteiros",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"roteiros"
					]
				}
			},
			"response": []
		},
		{
			"name": "get roteiros",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8000/roteiros",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"roteiros"
					]
				}
			},
			"response": []
		},
		{
			"name": "post option",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"id_roteiro\":1,\n        \"tag\":\"Informa√ß√µes sobre a plataforma\",\n        \"text\":\"Simulai √© Maneiro Pra krl\",\n        \"video\":\"Simulai √© Maneiro Pra krl\"\n    },\n    {\n        \"id_roteiro\":1,\n        \"tag\":\"Informa√ß√µes sobre a plataforma\",\n        \"text\":\"Simulai √© uma plataforma sobre treinamento real√≠stico para estudantes de medicina\",\n        \"video\":\"Simulai √© uma plataforma sobre treinamento real√≠stico para estudantes de medicina\"\n    },\n    {\n        \"id_roteiro\":1,\n        \"tag\":\"Informa√ß√µes sobre a plataforma\",\n        \"text\":\"Nosso projeto √© muito focado na √°rea de educa√ß√£o, por isso estamos t√£o empolgados\",\n        \"video\":\"Nosso projeto √© muito focado na √°rea de educa√ß√£o, por isso estamos t√£o empolgados\"\n    }\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8000/options/list",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"options",
						"list"
					]
				},
				"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
			},
			"response": []
		},
		{
			"name": "post option Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"id_roteiro\":1,\n        \"tag\":\"Informa√ß√µes sobre o Grupo\",\n        \"text\":\"Nossos integrantes s√£o: Pedro Pertusi, Felipe Maluli, Eduardo Vaz e Jo√£o Alfredo\",\n        \"video\":\"Nossos integrantes s√£o: Pedro Pertusi, Felipe Maluli, Eduardo Vaz e Jo√£o Alfredo\"\n    },\n    {\n        \"id_roteiro\":1,\n        \"tag\":\"Informa√ß√µes sobre o Grupo\",\n        \"text\":\"Cada integrante carrega seu pr√≥prio peso e faz suas pr√≥prias horas, mesmo assim, somos comunicativos e empenhados\",\n        \"video\":\"Cada integrante carrega seu pr√≥prio peso e faz suas pr√≥prias horas, mesmo assim, somos comunicativos e empenhados\"\n    }\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8000/options/list",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"options",
						"list"
					]
				},
				"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
			},
			"response": []
		},
		{
			"name": "post option Copy 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"id_roteiro\":1,\n        \"tag\":\"Informa√ß√µes sobre os Professores\",\n        \"text\":\"Eles podem ser duros  de vez em quando, mas sabemos que √© por que eles esperam muito de todos os seus alunos\",\n        \"video\":\"Eles podem ser duros  de vez em quando, mas sabemos que √© por que eles esperam muito de todos os seus alunos\"\n    },\n    {\n        \"id_roteiro\":1,\n        \"tag\":\"Informa√ß√µes sobre os Professores\",\n        \"text\":\"Nossos professores s√£o Fabr√≠cio Barth e Marcelo Nakagawa\",\n        \"video\":\"Nossos professores s√£o Fabr√≠cio Barth e Marcelo Nakagawa\"\n    }\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8000/options/list",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"options",
						"list"
					]
				},
				"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
			},
			"response": []
		},
		{
			"name": "post option Copy 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"id_roteiro\":1,\n        \"tag\":\"Final da Conversa\",\n        \"text\":\"Muito Obrigado!\",\n        \"video\":\"Muito Obrigado!\"\n    }\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8000/options/list",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"options",
						"list"
					]
				},
				"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
			},
			"response": []
		},
		{
			"name": "post option Copy 4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": " {\n        \"id_roteiro\":1,\n        \"tag\":\"Confus√£o\",\n        \"text\":\"Desculpa, n√£o entendi\",\n        \"video\":\"Desculpa, n√£o entendi\"\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8000/options/",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"options",
						""
					]
				},
				"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
			},
			"response": []
		},
		{
			"name": "Get data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8000/options/roteiro/1",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"options",
						"roteiro",
						"1"
					]
				},
				"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
			},
			"response": []
		},
		{
			"name": "post message",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id_conversation\": \"ahhhhhhhhhhhhh\",\r\n    \"id_roteiro\": 1,\r\n    \"url\": \"Qual √© o o maior clube de bocha dos estado de s√£o paulo?\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8000/conversation",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"conversation"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/"
		}
	]
}